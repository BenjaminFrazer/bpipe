name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Changed to write for full file access
      pull-requests: write  # Changed to write for PR modifications
      issues: write  # Changed to write for issue modifications
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: true  # Recursively checkout submodules
          fetch-depth: 0    # Needed for full history (useful for submodules with branches)

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Additional permissions for Claude to read comment history and CI results
          additional_permissions: |
            actions: read
            issues: write
            pull-requests: write
          
          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4)
          # model: "claude-opus-4-20250514"
          
          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"
          
          # Optional: Trigger when specific user is assigned to an issue
          # assignee_trigger: "claude-bot"
          
          # Allow Claude to run build, test, debug, and analysis commands
          allowed_tools: "Bash(make),Bash(make test-c),Bash(make test-*),Bash(make clean),Bash(make lint),Bash(make lint-c),Bash(make lint-py),Bash(make lint-fix),Bash(./scripts/run_with_timeout.sh *),Bash(gcc *),Bash(g++ *),Bash(clang *),Bash(gdb *),Bash(valgrind *),Bash(python *),Bash(pip *),Bash(git *),Bash(find *),Bash(grep *),Bash(cat *),Bash(ls *),Bash(cd *)"
          
          # Custom instructions for Claude to follow project guidelines
          custom_instructions: |
            IMPORTANT: Read CLAUDE.md first for mandatory documentation and project guidelines
            Always read the core documentation before implementing any filters or features
            Use the timeout utility (./scripts/run_with_timeout.sh) when running tests
            Always run 'make lint' before committing changes
            Follow the error handling patterns using BP_WORKER_ASSERT and CHECK_ERR macros
            Keep documentation updated when changing functionality
            
            Context Information:
            - Issue/PR Number: #${{ github.event.issue.number || github.event.pull_request.number }}
            - Repository: ${{ github.repository }}
            - Event Type: ${{ github.event_name }}
            - Triggered by: ${{ github.actor }}
          
          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test

